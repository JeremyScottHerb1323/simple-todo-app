{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodosList","this","todos","map","key","React","Component","Header","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","handleChange","delTodo","filter","addTodoItem","newTodo","uuid","ReactDOM","render","document","getElementById"],"mappings":"gQA0BeA,MAxBf,SAAkBC,GACd,IADqB,EAQYA,EAAMC,KAA/BC,EARa,EAQbA,UAAWC,EARE,EAQFA,GAAIC,EARF,EAQEA,MAEvB,OACA,wBAAIC,UAAU,aACV,2BACIC,KAAK,WACLC,QAASL,EACTM,SAAU,kBAAMR,EAAMS,kBAAkBN,MAC5C,4BAAQO,QAAS,kBAAMV,EAAMW,gBAAgBR,KAA7C,UACA,0BAAMS,MAAOV,EAhBM,CACnBW,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAY0B,MACrCZ,KCAEa,E,uKAhBD,IAAD,OACL,OACI,6BACKC,KAAKlB,MAAMmB,MAAMC,KAAI,SAAAnB,GAAI,OACtB,kBAAC,EAAD,CACAoB,IAAKpB,EAAKE,GACVF,KAAMA,EACNQ,kBAAmB,EAAKT,MAAMS,kBAC9BE,gBAAiB,EAAKX,MAAMW,0B,GATxBW,IAAMC,WCcfC,EAfA,WAOX,OACI,4BAAQZ,MANQ,CAChBa,QAAS,SACTC,WAAY,QAKR,wBAAId,MAAO,CAAEe,SAAU,OAAQC,aAAc,SAA7C,mBACA,uBAAGhB,MAAO,CAAEe,SAAU,SAAtB,wD,OC6BGE,E,4MAtCXC,MAAQ,CACJ1B,MAAO,I,EAGXI,SAAW,SAAAuB,GACP,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAIlCC,aAAe,SAAAL,GACXA,EAAEM,iBACF,EAAKrC,MAAMsC,aAAa,EAAKR,MAAM1B,OACnC,EAAK4B,SAAS,CACV5B,MAAO,M,uDAKX,OACI,0BAAMmC,SAAUrB,KAAKkB,aAAc/B,UAAU,kBACzC,2BACIC,KAAK,OACLD,UAAU,aACVG,SAAUU,KAAKV,SACfgC,YAAY,cACZL,MAAOjB,KAAKY,MAAM1B,MAClB8B,KAAK,UAET,2BACI7B,UAAU,eACVC,KAAK,SACL6B,MAAM,gB,GAjCFZ,a,gBC4FTkB,E,4MAjFXX,MAAQ,CACJX,MAAO,CACH,CACIhB,GAAI,EACJC,MAAO,gCACPF,WAAW,GAEf,CACIC,GAAI,EACJC,MAAO,kCACPF,WAAW,GAEf,CACIC,GAAI,EACJC,MAAO,wBACPF,WAAW,K,EAWvBwC,aAAe,SAACvC,GACZ,EAAK6B,SAAS,CACVb,MAAO,EAAKW,MAAMX,MAAMC,KAAI,SAAAnB,GAIxB,OAHIA,EAAKE,KAAOA,IACZF,EAAKC,WAAaD,EAAKC,WAEpBD,Q,EAUnB0C,QAAU,SAAAxC,GACN,EAAK6B,SAAS,CACVb,MAAM,YACC,EAAKW,MAAMX,MAAMyB,QAAO,SAAA3C,GACvB,OAAOA,EAAKE,KAAOA,S,EAWnC0C,YAAc,SAAAzC,GACV,IAAM0C,EAAU,CACZ3C,GAAI4C,MACJ3C,MAAOA,EACPF,WAAW,GAEf,EAAK8B,SAAS,CACVb,MAAM,GAAD,mBAAM,EAAKW,MAAMX,OAAjB,CAAwB2B,O,uDAKjC,OACI,yBAAKzC,UAAU,aACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWiC,aAAcpB,KAAK2B,cAC9B,kBAAC,EAAD,CACI1B,MAAOD,KAAKY,MAAMX,MAClBV,kBAAmBS,KAAKwB,aACxB/B,gBAAiBO,KAAKyB,e,GAnFdrB,IAAMC,W,MCAlCyB,IAASC,OAAO,kBAAC,EAAD,MAAmBC,SAASC,eAAe,W","file":"static/js/main.d8b68f7e.chunk.js","sourcesContent":["import React from 'react'\n\nfunction TodoItem(props) {\n    const completedStyle = {\n        fontStyle: \"italic\",\n        color: \"#d35e0f\",\n        opacity: .4,\n        textDecoration: \"line-through\"\n    }\n\n    const { completed, id, title } = props.todo\n    \n    return(\n    <li className=\"todo-item\">\n        <input \n            type=\"checkbox\" \n            checked={completed}\n            onChange={() => props.handleChangeProps(id)} />\n        <button onClick={() => props.deleteTodoProps(id)}>Delete</button>\n        <span style={completed ? completedStyle : null}>\n            {title}\n        </span>\n    </li>\n    );\n}\n\nexport default TodoItem","import React from 'react'\nimport TodoItem from './TodoItem'\n\nclass TodosList extends React.Component {  \n    render() {\n        return (\n            <div>\n                {this.props.todos.map(todo => (\n                    <TodoItem \n                    key={todo.id} \n                    todo={todo}\n                    handleChangeProps={this.props.handleChangeProps}\n                    deleteTodoProps={this.props.deleteTodoProps} />\n                ))}\n            </div>\n        )\n    }\n\n}\n\nexport default TodosList","import React from 'react'\n\nconst Header = () => {\n\n    const headerStyle = {\n        padding: \"20px 0\",\n        lineHeight: \"2em\",\n    }\n\n    return (\n        <header style={headerStyle}>\n            <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\"}}>Simple Todo App</h1>\n            <p style={{ fontSize: \"19px\"}}>Please add to-dos item(s) through the input field.</p>\n        </header>\n    )\n}\n\nexport default Header","import React, { Component } from 'react'\n\nclass InputTodo extends Component {\n    state = {\n        title: \"\"\n    };\n\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.addTodoProps(this.state.title);\n        this.setState({\n            title: \"\"\n        });\n    }\n\n    render(){\n        return (\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\n                <input \n                    type=\"text\"\n                    className=\"input-text\"\n                    onChange={this.onChange}\n                    placeholder=\"Add Todo...\"\n                    value={this.state.title}\n                    name=\"title\" />\n\n                <input \n                    className=\"input-submit\"\n                    type=\"submit\" \n                    value=\"Submit\" />\n            </form>\n        )\n    }\n}\n\nexport default InputTodo","import React from 'react'\nimport TodosList from './TodosList'\nimport Header from './Header'\nimport InputTodo from './InputTodo'\nimport uuid from \"react-uuid\";\n\nclass TodoContainer extends React.Component {\n    /**\n     * Store state on main parent component\n     * ID = int\n     * title = string\n     * completed = boolean\n     */\n    state = {\n        todos: [\n            {\n                id: 1,\n                title: \"Setup development environment\",\n                completed: true\n            },\n            {\n                id: 2,\n                title: \"Develop website and add content\",\n                completed: false\n            },\n            {\n                id: 3,\n                title: \"Deploy to live server\",\n                completed: false\n            }\n        ]\n    }\n\n    /**\n     * handleChange\n     * On check get ID and if it matches toDo saved, switch\n     * Completed to true\n     * @var completed Boolean\n     */\n    handleChange = (id) => {\n        this.setState({\n            todos: this.state.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed\n                }\n                return todo;\n            })\n        });\n    }\n\n    /**\n     * delTodo\n     * Update state todos for each filter and return entry\n     * whos id is not equal to the current id\n     */\n    delTodo = id => {\n        this.setState({\n            todos: [\n                ...this.state.todos.filter(todo => {\n                    return todo.id !== id;\n                })\n            ]\n        });\n    }\n\n    /**\n     * addTodoItem\n     * @var title String\n     * get title from input and save/add item\n     */\n    addTodoItem = title => {\n        const newTodo = {\n            id: uuid(),\n            title: title,\n            completed: false\n        };\n        this.setState({\n            todos: [...this.state.todos, newTodo]\n        });\n    }\n\n    render(){\n        return (\n            <div className=\"container\">\n                <Header />\n                <InputTodo addTodoProps={this.addTodoItem} />\n                <TodosList \n                    todos={this.state.todos} \n                    handleChangeProps={this.handleChange} \n                    deleteTodoProps={this.delTodo} />\n            </div>\n        );\n    }\n}\nexport default TodoContainer","import React from 'react'\nimport ReactDOM from 'react-dom'\n// Component file\nimport TodoContainer from \"./components/TodoContainer\"\n// Styles\nimport \"./App.css\"\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}